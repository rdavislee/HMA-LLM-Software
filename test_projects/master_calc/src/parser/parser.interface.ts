import { Token } from '../types/tokens.js';
import { AstNode, ExpressionNode } from '../types/ast.js';

/**
 * Interface for the Parser module.
 * It defines the contract for converting a stream of tokens into an Abstract Syntax Tree (AST).
 */
export interface IParser {
    /**
     * Parses a list of tokens and constructs an Abstract Syntax Tree.
     * @param tokens The list of tokens generated by the tokenizer.
     * @returns The root node of the constructed AST.
     * @throws {Error} If the token stream represents an invalid mathematical expression.
     */
    parse(tokens: Token[]): ExpressionNode;
}
