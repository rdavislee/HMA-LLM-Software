// Coder Language Grammar for Lark
// Based on the manager language grammar but adapted for coder agents

// Comments
COMMENT: /\/\/.*/

// Directives
directive: read | run | change | replace | spawn | wait | finish

// Read directive - read any file in the codebase
read: "READ" filename

// Run directive - run terminal commands
run: "RUN" command

// Change directive - replace entire file contents
change: "CHANGE" "CONTENT" "=" content_string

// Replace directive - replace a string in the file with another string
replace: "REPLACE" "FROM" "=" from_string "TO" "=" to_string

// Spawn directive - spawn ephemeral agents
spawn: "SPAWN" spawn_item ("," spawn_item)*
spawn_item: ephemeral_type prompt_field

// Wait directive - wait for ephemeral agents to complete
wait: "WAIT"

// Finish directive - complete the task
finish: "FINISH" prompt_field

// Filename is a quoted string
filename: string

// Command is a quoted string
command: string

// Ephemeral types
ephemeral_type: TESTER

// Prompt field
prompt_field: "PROMPT" "=" string

// Content string - uses regular quoted strings
content_string: string

// From and to strings for replace directive
from_string: string
to_string: string

// Regular string literals (for filenames, commands, prompts, content)
string: STRING
STRING: /"([^"\\]|\\.)*"/

// Ephemeral type tokens
TESTER: "tester"

// Ignore whitespace and comments
%import common.WS
%ignore WS
%ignore COMMENT 